openapi: "3.0.2"
info:
  title: "CONTENT MANAGEMENT API"
  description: "CONTENT MANAGEMENT"
  version: "0.1 beta"
  contact:
    name: "CONTENT MANAGEMENT API"
paths:
  /Load_new_post:
    post:
      tags:
      - Load new post
      summary: "Loads a new post"
      description: "API for loading a new post to the database"
      operationId: load_new_post
      parameters:
      - name: photo
        in: query
        description: "Photo file in string format"
        required: true
        schema:
          type: string
          
        
      - name: description_post
        in: query
        description: "Atributes of post. Post name is always atribute with index 0."
        required: true
        schema:
          type: array
          items:
              type: string 
          
      - name: tag_post
        in: query
        description: "Atributes of post"
        required: true
        schema:
          type: array
          items:
              type: string 
          
      - name: load_data_time
        in: query
        description: "Time of loading post"
        schema:
          type: string

      - name: file_size
        in: query
        description: "Size of the photo file in bytes"
        schema:
          type: integer

      - name: file_size_pixels
        in: query
        description: "Size of the photo file in pixels"
        schema:
          type: array
          items:
              type: integer
              
      - name: user_id
        in: query
        description: "Id of the user which has loaded the post"
        schema:
          type: integer 
          
      - name: geolocation
        in: query
        description: "Geolocation of the user"
        schema:
          type: string
          
      - name: File_format
        in: query
        description: "Format of file like JPEG,PNG,BMP or others"
        schema:
          type: string

      responses:
        201:
          description: "Successful loading response, photo added to database"
          content:
            application/json:
              schema:
                title: "Successfull"
                type: "object"
                properties:
                   PostID:
                    type: integer
                   Result:
                    type: boolean
        500:
          description: "Unable to connect to database"
        

        501:
          description: "Post wasn't loaded response"
          content:
            text/plain:
              schema:
                title: "Error, post wasn't loaded"
                type: string
                example: "Post wasn't loaded"
                
  /Delete_post:
    delete:
      tags:
      - Delete post
      summary: "Delete post"
      description: "API to delete the post from database"
      operationId: delete_post
      parameters:
      - name: post_id
        in: query
        description: "Post id"
        required: true
        schema:
          type: "string"
      responses:
        201:
          description: "Successful deletion response, post deleted from the database"
          content:
            text/plain:
              schema:
                title: "Error, post wasn't loaded"
                type: string
                example: "Successful deletion response, post deleted from the database"
        500:
          description: "Unable to connect to database"
        501:
          description: "Non-existing post_id"
          content:
            text/plain:
              schema:
                title: "Ok"
                type: string
                example: "Non-existing post_id"
          
  /Edit_post_field:
    post:
      tags: 
      - Edit post
      summary: Edit post
      description: "You can change the post's atribute using it's index from GetPostAtributes"
      operationId: Edit_post
      parameters:
      - name: Post_ID
        in: query
        description: "Post id"
        required: true
        schema:
          type: "string"
      - name: Index field
        in: query
        description: "Index of the required field"
        required: true
        schema:
          type: "integer"
      responses:
        201:
          description: "Corrected sucesfully"
        500:
          description: "Unable to connect to database"
        501:
          description: "Post with this id doesn't exist"
        502:
          description: "Atribute with this index doesn't exist"
          
  /Get_post_atributes:
    get:
      tags: 
      - Get post atributes
      summary: Get post atributes
      description: "You can get the list of the post's indexes, name of the post always has index 0"
      operationId: Get_post_atributes
      parameters:
      - name: Post_ID
        in: query
        description: "Post id"
        required: true
        schema:
          type: "string"
      responses:
        201:
          description: "Indexes returned sucesfully"
          content:
            application/json:
              schema:
                title: Successfull
                type: "object"
                properties:
                   Atributes:
                    type: array
                    items:
                     type: string
                   Result:
                    type: boolean
        500:
          description: "Unable to connect to database"
        501:
          description: "Post with this id doesn't exist"
          
          
  /Get_post:
    get:
      tags:
      - Get post
      summary: "Get post"
      description: "Get post by it's atributes"
      operationId: get_post
      parameters:
      - name: post_id
        in: query
        description: "Post id"
        required: true
        schema:
          type: "string"
      responses:
        201:
          description: "Post got succesfully"
          content:
            application/json:
              schema:
                title: Successfull
                type: "object"
                properties:
                   Name:
                    type: string
               
        500:
          description: "Unable to connect to database"           
        501:
          description: "Post id doesn't exist"


  
  /Get_metadata_post:
    get:
      tags:
      - Get metadata post
      summary: Get metadata post
      description: "API to get the metadata of the post"
      operationId: Get_metadata_post
      parameters:
      - name: Post_ID
        in: query
        description: "Post id"
        required: true
        schema:
          type: "string"
      responses:
        201:
          description: Metadata received
          content:
            application/json:
              schema:
                title: Successfull
                type: "object"
                properties:
                  load_data_time:
                    type: string
                  file_size:
                    type: string
                  file_size_pixels:
                    type: array
                    items:
                      type: integer
                  geolocation:
                    type: string
                  user_id:
                    type: string
                  File_format:
                    type: string
                  Result:
                    type: boolean
        500:
          description: "Unable to connect to database"
        501:
          description: "Post id doesn't exist"







