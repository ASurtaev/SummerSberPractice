openapi: 3.0.2
info:
  title: CONTENT MANAGEMENT API
  description: CONTENT MANAGEMENT
  contact:
    name: CONTENT MANAGEMENT API
  version: 0.1 beta
servers:
- url: http://localhost:8053
  description: Some absctract server
paths:
  /Load_new_post:
    post:
      tags:
      - Load new post
      summary: Loads a new post
      description: API for loading a new post to the database
      operationId: load_new_post
      parameters:
      - name: photo
        in: query
        description: Photo file in string format
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: post_name
        in: query
        description: Name of post
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: post_atributes
        in: query
        description: 'Atributes of post, name of the attribute and it''s value are
          divided with '':'' '
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
        example: '[Cost:500],[Color:red]'
      - name: tag_post
        in: query
        description: Tags of post
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
        example: '[#shop],[#food]'
      - name: load_data_time
        in: query
        description: Time of loading post
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: file_size
        in: query
        description: Size of the photo file in bytes
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: file_size_pixels
        in: query
        description: Size of the photo file in pixels
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
      - name: user_id
        in: query
        description: Id of the user which has loaded the post
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: geolocation
        in: query
        description: Geolocation of the user
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: File_format
        in: query
        description: Format of file like JPEG,PNG,BMP or others
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: Successful loading response, photo added to database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Successfull'
        "501":
          description: Unable to connect to database
          content:
            text/plain:
              schema:
                title: Error
                type: string
                example: Unable to connect to database
                x-content-type: text/plain
        "502":
          description: Post wasn't loaded response
          content:
            text/plain:
              schema:
                title: Error
                type: string
                example: Post wasn't loaded
                x-content-type: text/plain
      x-openapi-router-controller: swagger_server.controllers.load_new_post_controller
  /Delete_post:
    delete:
      tags:
      - Delete post
      summary: Delete post
      description: API to delete the post from database
      operationId: delete_post
      parameters:
      - name: post_id
        in: query
        description: Post id
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: Successful deletion response, post deleted from the database
          content:
            text/plain:
              schema:
                title: Successful
                type: string
                example: Successful deletion response, post deleted from the database
                x-content-type: text/plain
        "501":
          description: Unable to connect to database
          content:
            text/plain:
              schema:
                title: Error
                type: string
                example: Unable to connect to database
                x-content-type: text/plain
        "502":
          description: Non-existing post_id
          content:
            text/plain:
              schema:
                title: Error
                type: string
                example: Non-existing post_id
                x-content-type: text/plain
      x-openapi-router-controller: swagger_server.controllers.delete_post_controller
  /Edit_post_field:
    post:
      tags:
      - Edit post
      summary: Edit post
      description: Using GetPostAtributes, a list of atributes is called and the user
        chooses which atribute he needs to name
      operationId: edit_post
      parameters:
      - name: Post_ID
        in: query
        description: Post id
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: attribute_name
        in: query
        description: Attribute name
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: new_value
        in: query
        description: New value of the attribute
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: Corrected sucesfully
          content:
            text/plain:
              schema:
                title: Successful
                type: string
                example: Corrected sucesfully
                x-content-type: text/plain
        "501":
          description: Unable to connect to database
          content:
            text/plain:
              schema:
                title: Error
                type: string
                example: Unable to connect to database
                x-content-type: text/plain
        "502":
          description: Post with this id doesn't exist
          content:
            text/plain:
              schema:
                title: Error
                type: string
                example: Post with this id doesn't exist
                x-content-type: text/plain
      x-openapi-router-controller: swagger_server.controllers.edit_post_controller
  /Get_post_atributes:
    get:
      tags:
      - Get post atributes
      summary: Get post atributes
      description: You can get the list of the post's atributes.
      operationId: get_post_atributes
      parameters:
      - name: Post_ID
        in: query
        description: Post id
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: Attribute returned sucesfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Successfull_1'
        "501":
          description: Unable to connect to database
          content:
            text/plain:
              schema:
                title: Error
                type: string
                example: Unable to connect to database
                x-content-type: text/plain
        "502":
          description: Post with this id doesn't exist
          content:
            text/plain:
              schema:
                title: Error
                type: string
                example: Post with this id doesn't exist
                x-content-type: text/plain
      x-openapi-router-controller: swagger_server.controllers.get_post_atributes_controller
  /Get_post:
    get:
      tags:
      - Get post
      summary: Get post
      description: Get post's name and photo
      operationId: get_post
      parameters:
      - name: post_id
        in: query
        description: Post id
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: Post got succesfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Successfull_2'
        "501":
          description: Unable to connect to database
          content:
            text/plain:
              schema:
                title: Error
                type: string
                example: Unable to connect to database
                x-content-type: text/plain
        "502":
          description: Post with this id doesn't exist
          content:
            text/plain:
              schema:
                title: Error
                type: string
                example: Post with this id doesn't exist
                x-content-type: text/plain
      x-openapi-router-controller: swagger_server.controllers.get_post_controller
  /Get_metadata_post:
    get:
      tags:
      - Get metadata post
      summary: Get metadata post
      description: API to get the metadata of the post
      operationId: get_metadata_post
      parameters:
      - name: Post_ID
        in: query
        description: Post id
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: Metadata received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Successfull_3'
        "501":
          description: Unable to connect to database
          content:
            text/plain:
              schema:
                title: Error
                type: string
                example: Unable to connect to database
                x-content-type: text/plain
        "502":
          description: Post with this id doesn't exist
          content:
            text/plain:
              schema:
                title: Error
                type: string
                example: Post with this id doesn't exist
                x-content-type: text/plain
      x-openapi-router-controller: swagger_server.controllers.get_metadata_post_controller
components:
  schemas:
    Successfull:
      title: Successfull
      type: object
      properties:
        PostID:
          type: integer
        Result:
          type: boolean
      example:
        PostID: 0
        Result: true
    Successfull_1:
      title: Successfull
      type: object
      properties:
        Name:
          type: string
        Atributes:
          type: array
          items:
            type: string
        Tag:
          type: array
          items:
            type: string
      example: "Name:\n Рeadphones\nAtributes: \n Cots 1500\n Color red\n Excellent\
        \ quality\nTag:\n Music\n Accessories"
    Successfull_2:
      title: Successfull
      type: object
      properties:
        Photo:
          type: string
        Name:
          type: string
        Atributes:
          type: array
          items:
            type: string
        Tag:
          type: array
          items:
            type: string
      example: "PHOTO\nName:\n Рeadphones\nAtributes: \n Cots 1500\n Color red\n Excellent\
        \ quality\nTag:\n Music\n Accessories"
    Successfull_3:
      title: Successfull
      type: object
      properties:
        load_data_time:
          type: string
        file_size:
          type: string
        file_size_pixels:
          type: array
          items:
            type: integer
        geolocation:
          type: string
        user_id:
          type: string
        File_format:
          type: string
        Result:
          type: boolean
      example: |-
        Load data time: 16:50 03.08.2020
        File size: 2 Mb
        File size pixels: 1920 x 1080
        Geoloction: Moskow
        ......

